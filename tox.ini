[tox]
envlist =
    fix
    py311
    py310
    py39
    py38
    py37
    type
    coverage
    readme
isolated_build = true
skip_missing_interpreters = true
minversion = 3.21

[testenv]
description = run tests with {basepython}
passenv =
    PIP_*
    PYTEST_*
setenv =
    COVERAGE_FILE = {toxworkdir}{/}.coverage.{envname}
extras =
    testing
    type_comments
commands =
    pytest {tty:--color=yes} {posargs: \
      --junitxml {toxworkdir}{/}junit.{envname}.xml --cov {envsitepackagesdir}{/}sphinx_autodoc_typehints --cov {toxinidir}{/}tests \
      --cov-config=setup.cfg --no-cov-on-fail --cov-report term-missing:skip-covered --cov-context=test \
      --cov-report html:{envtmpdir}{/}htmlcov --cov-report xml:{toxworkdir}{/}coverage.{envname}.xml \
      tests}
    diff-cover --compare-branch {env:DIFF_AGAINST:origin/main} {toxworkdir}{/}coverage.{envname}.xml
package = wheel
wheel_build_env = .pkg

[testenv:fix]
description = format the code base to adhere to our styles, and complain about what we cannot do automatically
skip_install = true
deps =
    pre-commit>=2
commands =
    pre-commit run --all-files --show-diff-on-failure

[testenv:type]
description = run type check on code base
setenv =
    {tty:MYPY_FORCE_COLOR = 1}
deps =
    mypy==0.971
    types-docutils
commands =
    mypy --python-version 3.10 src
    mypy --python-version 3.10 tests

[testenv:coverage]
description = combine coverage files and generate diff (against DIFF_AGAINST defaulting to origin/main)
passenv =
    DIFF_AGAINST
setenv =
    COVERAGE_FILE = {toxworkdir}/.coverage
skip_install = true
deps =
    covdefaults>=2.2
    coverage>=6.3
    diff-cover>=6.4
extras =
parallel_show_output = true
commands =
    coverage combine
    coverage report --skip-covered --show-missing
    coverage xml -o {toxworkdir}/coverage.xml
    coverage html -d {toxworkdir}/htmlcov
    diff-cover --compare-branch {env:DIFF_AGAINST:origin/main} {toxworkdir}/coverage.xml
depends =
    py311
    py310
    py39
    py38
    py37

[testenv:readme]
description = check that the long description is valid (need for PyPI)
skip_install = true
deps =
    build>=0.7
    twine>=4
extras =
commands =
    pyproject-build -o {envtmpdir} --wheel --sdist .
    twine check {envtmpdir}/*

[testenv:dev]
description = generate a DEV environment
usedevelop = true
commands =
    python -m pip list --format=columns
    python -c 'import sys; print(sys.executable)'

[flake8]
max-complexity = 22
max-line-length = 120
noqa-require-code = true

[pep8]
max-line-length = 120

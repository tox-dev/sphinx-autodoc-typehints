[tox]
requires =
    tox>=4.2
env_list =
    fix
    py312
    py311
    py310
    py39
    py38
    py37
    type
    coverage
    readme
skip_missing_interpreters = true

[testenv]
description = run tests with {basepython}
package = wheel
wheel_build_env = .pkg
extras =
    numpy
    testing
    type-comment
pass_env =
    PIP_*
    PYTEST_*
set_env =
    COVERAGE_FILE = {toxworkdir}{/}.coverage.{envname}
commands =
    pytest {tty:--color=yes} {posargs: \
      --junitxml {toxworkdir}{/}junit.{envname}.xml --cov {envsitepackagesdir}{/}sphinx_autodoc_typehints --cov {toxinidir}{/}tests \
      --cov-config=pyproject.toml --no-cov-on-fail --cov-report term-missing:skip-covered --cov-context=test \
      --cov-report html:{envtmpdir}{/}htmlcov --cov-report xml:{toxworkdir}{/}coverage.{envname}.xml \
      tests}
    diff-cover --compare-branch {env:DIFF_AGAINST:origin/main} {toxworkdir}{/}coverage.{envname}.xml

[testenv:fix]
description = format the code base to adhere to our styles, and complain about what we cannot do automatically
skip_install = true
deps =
    pre-commit>=3.3.3
commands =
    pre-commit run --all-files --show-diff-on-failure

[testenv:py312]
extras =
    testing
    type-comment

[testenv:type]
description = run type check on code base
deps =
    mypy==1.4.1
    types-docutils>=0.20.0.2
set_env =
    {tty:MYPY_FORCE_COLOR = 1}
commands =
    mypy src
    mypy tests

[testenv:coverage]
description = combine coverage files and generate diff (against DIFF_AGAINST defaulting to origin/main)
skip_install = true
deps =
    covdefaults>=2.3
    coverage>=7.3
    diff-cover>=7.7
extras =
parallel_show_output = true
pass_env =
    DIFF_AGAINST
set_env =
    COVERAGE_FILE = {toxworkdir}/.coverage
commands =
    coverage combine
    coverage report --skip-covered --show-missing
    coverage xml -o {toxworkdir}/coverage.xml
    coverage html -d {toxworkdir}/htmlcov
    diff-cover --compare-branch {env:DIFF_AGAINST:origin/main} {toxworkdir}/coverage.xml
depends =
    py312
    py311
    py310
    py39
    py38
    py37

[testenv:readme]
description = check that the long description is valid (need for PyPI)
skip_install = true
deps =
    build[virtualenv]>=0.10
    twine>=4.0.2
extras =
commands =
    pyproject-build -o {envtmpdir} --wheel --sdist .
    twine check {envtmpdir}/*

[testenv:dev]
description = generate a DEV environment
package = editable
commands =
    python -m pip list --format=columns
    python -c 'import sys; print(sys.executable)'

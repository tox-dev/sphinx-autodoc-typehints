[build-system]
build-backend = "hatchling.build"
requires = [
  "hatch-vcs>=0.3",
  "hatchling>=1.17.1",
]

[project]
name = "sphinx-autodoc-typehints"
description = "Type hints (PEP 484) support for the Sphinx autodoc extension"
readme.content-type = "text/markdown"
readme.file = "README.md"
keywords = [
  "environments",
  "isolated",
  "testing",
  "virtual",
]
license = "MIT"
maintainers = [{ name = "Bern치t G치bor", email = "gaborjbernat@gmail.com" }]
authors = [{ name = "Bern치t G치bor", email = "gaborjbernat@gmail.com" }]
requires-python = ">=3.8"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Framework :: Sphinx :: Extension",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Documentation :: Sphinx",
]
dynamic = [
  "version",
]
dependencies = [
  "Sphinx>=7.0.1",
]
optional-dependencies.docs = [
  "furo>=2023.5.20",
  "sphinx>=7.0.1",
]
optional-dependencies.numpy = [
  "nptyping>=2.5",
]
optional-dependencies.testing = [
  "covdefaults>=2.3",
  "coverage>=7.2.7",
  "diff-cover>=7.5",
  "pytest>=7.3.1",
  "pytest-cov>=4.1",
  "sphobjinv>=2.3.1",
  "typing-extensions>=4.6.3",
]
urls.Changelog = "https://github.com/tox-dev/sphinx-autodoc-typehints/blob/main/CHANGELOG.md"
urls.Homepage = "https://github.com/tox-dev/sphinx-autodoc-typehints"
urls.Source = "https://github.com/tox-dev/sphinx-autodoc-typehints"
urls.Tracker = "https://github.com/tox-dev/sphinx-autodoc-typehints/issues"

[tool.hatch]
build.hooks.vcs.version-file = "src/sphinx_autodoc_typehints/version.py"
version.source = "vcs"

[tool.black]
line-length = 120

[tool.ruff]
select = ["ALL"]
line-length = 120
target-version = "py37"
isort = {known-first-party = ["tox", "tests"], required-imports = ["from __future__ import annotations"]}
ignore = [
  "ANN101",  # no typoe annotation for self
  "ANN401",  # allow Any as type annotation
  "D203",  # `one-blank-line-before-class` (D203) and `no-blank-line-before-class` (D211) are incompatible
  "D212",  # `multi-line-summary-first-line` (D212) and `multi-line-summary-second-line` (D213) are incompatible
  "S104",  # Possible binding to all interface
]
[tool.ruff.per-file-ignores]
"tests/**/*.py" = [
  "S101",  # asserts allowed in tests...
  "FBT",  # don"t care about booleans as positional arguments in tests
  "INP001", # no implicit namespace
  "D",  # don"t care about documentation in tests
  "S603",  # `subprocess` call: check for execution of untrusted input
  "PLR2004",  # Magic value used in comparison, consider replacing with a constant variable
]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.coverage]
html.show_contexts = true
html.skip_covered = false
paths.source = [
  "src",
  ".tox*/*/lib/python*/site-packages",
  ".tox*/pypy*/site-packages",
  ".tox*\\*\\Lib\\site-packages",
  "*/src",
  "*\\src",
]
report.fail_under = 85
report.omit = []
run.parallel = true
run.plugins = ["covdefaults"]

[tool.mypy]
python_version = "3.10"
strict = true
exclude = "^(.*/roots/.*)|(tests/test_integration.py)$"
overrides = [{ module = ["sphobjinv.*"], ignore_missing_imports = true }]
